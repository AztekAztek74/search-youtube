{"version":3,"sources":["components/Preloader/loader.svg","actions/SessionActions.js","components/Login/Login.js","containers/LoginForm/LoginForm.js","components/Navigation/Navigation.js","actions/QueryActions.js","containers/App/App.js","serviceWorker.js","actions/FavoritesQuery.js","reducers/users.js","reducers/entry.js","reducers/activeLogin.js","store/store.js","reducers/index.js","reducers/query.js","components/FavoriteItem/FavoriteItem.js","components/Portal/Portal.js","components/AddFavoriteQuery/AddFavoriteQuery.js","components/AddFavoriteTitle/AddFavoriteTitle.js","components/AddFavoriteSort/AddFavoriteSort.js","components/AddFavoriteSlider/AddFavoriteSlider.js","components/AddFavoriteButton/AddFavoriteButton.js","components/AddFavorite/AddFavorite.js","containers/FavotitesList/FavotitesList.js","components/RequestItem/RequestItem.js","components/VideoItem/VideoItem.js","components/VideoList/VideoList.js","components/Preloader/Preloader.js","containers/Search/Search.js","index.js"],"names":["module","exports","entryCheck","type","LoginForm","this","props","tokenCheck","handleInputChangePassword","handleInputChangeLogin","getFieldDecorator","form","className","Item","rules","required","message","initialValue","prefix","style","color","placeholder","onChange","Password","onClick","htmlType","React","Component","defaultProps","LoginInput","Form","create","name","state","textLogin","textPassword","value","target","setState","registrCheck","isLogin","length","usersList","map","elem","login","password","success","users","activeLog","newLogin","user","done","el","Date","getTime","error","connect","entry","activeLogin","id","token","Navigation","out","exact","to","activeQuery","activeSearch","activeResult","numResult","activeSort","sort","App","disabledSearch","children","query","Boolean","window","location","hostname","match","editFavorites","title","numRes","removeFavorites","USERS","load","namespace","ENTR","ACTIVE","preloadedState","rootReducer","combineReducers","action","saveInquiries","us","push","qu","filter","quest","isSearch","result","composeEnhancers","compose","store","createStore","applyMiddleware","save","FavoriteItem","modalActData","queryFavorit","key","Portal","document","createElement","body","appendChild","removeChild","ReactDOM","createPortal","AddFavoriteQuery","e","defaultValue","AddFavoriteTitle","initTitle","titleFavorite","Option","Select","AddFavoriteSlider","selectSort","initialSort","numResults","maxResults","max","tooltipVisible","AddFavoriteButton","modalAct","favoritesAdd","AddFavorite","isOpen","AddFavoriteSort","FavoritesList","modalWindow","stateId","num","actQuery","actSort","dataFavorite","prevState","activeClear","elemId","data","edFavorites","favoriteByUser","RequestItem","onSearch","Search","Input","enterButton","size","suffix","theme","twoToneColor","VideoItem","videoId","channelTitle","url","list","rel","href","src","alt","VideoList","selectGrid","selectList","actList","snippet","thumbnails","default","stateList","Preloader","preloader","BASE_PATH","KEY","completedQuery","isLoading","fetchData","axios","get","then","setVideo","catch","items","addFavorites","info","act","render","path","component","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f8b810e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.be4c451b.svg\";","export const LOG_IN = 'LOG_IN';\r\nexport const LOG_OUT = 'LOG_OUT';\r\nexport const ENTRY = 'ENTRY';\r\nexport const ACTIVE_LOGIN = 'ACTIVE_TOKEN';\r\n\r\nexport const newLogin = (id, login, token) =>{\r\n    return{\r\n        type: LOG_IN,\r\n        id,\r\n        login,\r\n        token\r\n    }\r\n}\r\n\r\nexport const entryCheck = () =>{\r\n    return{\r\n        type: ENTRY,\r\n    }\r\n}\r\n\r\nexport const activeLog = (login) =>{\r\n    return{\r\n        type: ACTIVE_LOGIN,\r\n        login\r\n    }\r\n}","import React from 'react'\r\nimport 'antd/dist/antd.css'\r\nimport './Login.scss'\r\nimport { Form, Icon, Input, Button } from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n  render() {\r\n    const { tokenCheck, handleInputChangePassword, handleInputChangeLogin } = this.props;\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      \r\n    <Form className=\"log-form\">\r\n      <div className='log-form__content'>\r\n        <h1 className='log-form__header'>Вход</h1>\r\n        <div className='log-form__input-container'>\r\n          <Form.Item>\r\n            {getFieldDecorator('username', {\r\n              rules: [{ required: true, message: 'Пожалуйста, введите логин' }],\r\n              initialValue: ''\r\n            })(\r\n              <Input\r\n                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                placeholder=\"Admin\"\r\n                onChange={handleInputChangeLogin}\r\n              />,\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator('password', {\r\n              rules: [{ required: true, message: 'Пожалуйста, введите пароль' },],\r\n              initialValue: ''\r\n            })(\r\n              <Input.Password\r\n                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                type=\"password\"\r\n                placeholder=\"1234\"\r\n                onChange={handleInputChangePassword}\r\n              />,\r\n            )}\r\n          </Form.Item>\r\n        </div>\r\n        <Button className='log-form__button' onClick={tokenCheck} type=\"primary\" htmlType=\"submit\">\r\n          Войти\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n\r\n      \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  handleInputChangePassword: PropTypes.func.isRequired,\r\n  handleInputChangeLogin: PropTypes.func.isRequired,\r\n  tokenCheck: PropTypes.func.isRequired,\r\n}\r\n\r\nLoginForm.defaultProps = {\r\n  handleInputChangePassword: () => {},\r\n  handleInputChangeLogin: () => {},\r\n  tokenCheck: () => {},\r\n}\r\n\r\nconst LoginInput = Form.create({ name: 'normal_login' })(LoginForm);\r\nexport default LoginInput;","import React, { Fragment } from 'react';\r\nimport { newLogin, entryCheck, activeLog } from '../../actions/SessionActions';\r\nimport LoginInput from '../../components/Login/Login';\r\nimport { connect } from 'react-redux';\r\nimport usersList from '../../userJSON/userJSON.json';\r\nimport 'antd/dist/antd.css';\r\nimport { message } from 'antd';\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n    state = {\r\n        textLogin: '',\r\n        textPassword: '',\r\n    }\r\n\r\n    handleInputChangeLogin = ({target: {value}}) => {\r\n        this.setState({\r\n            textLogin: value,\r\n        })\r\n    }\r\n\r\n    handleInputChangePassword = ({target: {value}}) => {\r\n        this.setState({\r\n            textPassword: value,\r\n        })\r\n    }\r\n\r\n    registrCheck = () =>{\r\n        const { textLogin, textPassword } = this.state;\r\n        let isLogin;\r\n        if (textLogin.length>3 && textPassword.length>3){\r\n            usersList.map((elem) =>{\r\n                if (elem.login === textLogin && elem.password === textPassword) {\r\n                    isLogin = elem.login\r\n                    message.success(`Здравствуйте, ${isLogin}`);\r\n                } \r\n                return isLogin\r\n            })\r\n        }\r\n        return isLogin\r\n    }\r\n\r\n\r\n    tokenCheck = () =>{\r\n        const { users, entryCheck, activeLog, newLogin } = this.props\r\n        let user = this.registrCheck()\r\n        let done = false\r\n        if (user){\r\n            users.map((el) => {\r\n                if (user === el.login){\r\n                    entryCheck()\r\n                    activeLog(user)\r\n                    done = true\r\n                }\r\n                return el;\r\n            })\r\n            \r\n            if (!done){\r\n                newLogin((new Date()).getTime(), user, (new Date()).getTime())\r\n                entryCheck()\r\n                activeLog(user)\r\n            }\r\n        }\r\n        else{\r\n            message.error('Проверьте правильность написания логина и пароля');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        const { textLogin, textPassword } = this.state;\r\n        return(\r\n            <Fragment>\r\n                <LoginInput \r\n                handleInputChangePassword={this.handleInputChangePassword} \r\n                handleInputChangeLogin={this.handleInputChangeLogin}\r\n                textLogin={textLogin}\r\n                textPassword={textPassword}\r\n                tokenCheck={this.tokenCheck}\r\n                />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect (state => \r\n({\r\n    users: state.users,\r\n    entry: state.entry,\r\n    activeLogin: state.activeLogin\r\n}), { newLogin, entryCheck, activeLog })(LoginForm)","import React from 'react'\r\nimport 'antd/dist/antd.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport './Navigation.scss'\r\n\r\n\r\nconst Navigation = ({ out }) => {\r\n    return (\r\n        <div className='container'>\r\n            <nav className='navigation'>\r\n                <div className='navigation__sections'>\r\n                    <div className='navigation__button'>\r\n                        <NavLink  exact to='/search-youtube'>Поиск</NavLink>\r\n                    </div>\r\n                    <div className='navigation__button'>\r\n                        <NavLink to='/favorites-youtube'>Избранное</NavLink>\r\n                    </div>\r\n                </div>\r\n                <div className='navigation__out'>\r\n                    <div className='navigation__button' onClick={out} >\r\n                        <NavLink exact to='/search'>Выйти</NavLink>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nNavigation.propTypes ={\r\n    out: PropTypes.func.isRequired,\r\n}\r\n\r\nNavigation.defaultProps ={\r\n    out: () => {},\r\n}\r\n\r\nexport default Navigation;","export const ACTIVE_QUERY = 'ACTIVE_QUERY'\r\nexport const ACTIVE_SEARCH = 'ACTIVE_SEARCH'\r\nexport const ACTIVE_RESULT = 'ACTIVE_RESULT'\r\nexport const ACTIVE_SORT = 'ACTIVE_SORT'\r\nexport const DISABLED_SEARCH = 'DISABLED_SEARCH'\r\nexport const CURRENT_TAB = 'CURRENT_TAB'\r\n\r\n\r\nexport const activeQuery = (value) =>{\r\n    return{\r\n        type: ACTIVE_QUERY,\r\n        value,\r\n    }\r\n}\r\n\r\nexport const activeSearch = () =>{\r\n    return{\r\n        type: ACTIVE_SEARCH\r\n    }\r\n}\r\n\r\nexport const disabledSearch = () =>{\r\n    return{\r\n        type: DISABLED_SEARCH\r\n    }\r\n}\r\n\r\nexport const activeResult = (numResult) =>{\r\n    return{\r\n        type: ACTIVE_RESULT,\r\n        numResult,\r\n    }\r\n}\r\n\r\nexport const activeSort = (sort) =>{\r\n    return{\r\n        type: ACTIVE_SORT,\r\n        sort,\r\n    }\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport LoginForm from '../LoginForm/LoginForm';\r\nimport Navigation from '../../components/Navigation/Navigation';\r\nimport { connect } from 'react-redux';\r\nimport { entryCheck } from '../../actions/SessionActions';\r\nimport { activeQuery, disabledSearch } from '../../actions/QueryActions';\r\n\r\nclass App extends React.Component{ \r\n\r\n  out = () =>{\r\n    this.props.entryCheck()\r\n    this.props.activeQuery('')\r\n    this.props.disabledSearch()\r\n  }\r\n\r\n  render(){\r\n    const { children, entry } = this.props;\r\n    if (entry){return (\r\n      <Fragment>\r\n        <Navigation out={this.out} />\r\n          {children}\r\n      </Fragment>)}\r\n    else{\r\n      return(<LoginForm />)}\r\n    }\r\n}\r\n\r\nexport default connect (state => \r\n  ({\r\n      entry: state.entry,\r\n      query: state.query,\r\n  }), { entryCheck, activeQuery, disabledSearch })(App)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const ADD_FAVORITES = 'ADD_FAVORITES'\r\nexport const EDIT_FAVORITES = 'EDIT_FAVORITES'\r\nexport const REMOVE_FAVORITES = 'REMOVE_FAVORITES'\r\n\r\nexport const addFavorites = (id, query, title, sort, numRes, activeLogin ) =>{\r\n    return{\r\n        type: ADD_FAVORITES,\r\n        id,\r\n        query,\r\n        title,\r\n        sort,\r\n        numRes,\r\n        activeLogin\r\n    }\r\n}\r\n\r\nexport const editFavorites = (id, query, title, sort, numRes, activeLogin ) =>{\r\n    return{\r\n        type: EDIT_FAVORITES,\r\n        id,\r\n        query,\r\n        title,\r\n        sort,\r\n        numRes,\r\n        activeLogin\r\n    }\r\n}\r\n\r\nexport const removeFavorites = (id, activeLogin) =>{\r\n    return{\r\n        type: REMOVE_FAVORITES,\r\n        id, \r\n        activeLogin\r\n    }\r\n}\r\n","import { LOG_IN } from '../actions/SessionActions';\r\nimport { load } from 'redux-localstorage-simple';\r\nimport { ADD_FAVORITES, EDIT_FAVORITES, REMOVE_FAVORITES } from '../actions/FavoritesQuery'\r\n\r\nlet USERS = load({ namespace: 'search_youtube' });\r\n\r\nif (!USERS || !USERS.users || !USERS.users.length){\r\n    USERS = {\r\n        users: [],\r\n    }\r\n}\r\n\r\nexport const users = (state = USERS.users, action) => {\r\n    switch (action.type){\r\n        case LOG_IN:\r\n            return[\r\n                ...state, {\r\n                    id: action.id,\r\n                    login: action.login,\r\n                    token: action.token,\r\n                    saveInquiries: []\r\n                }\r\n            ]\r\n            case ADD_FAVORITES:\r\n                return [...state].map(us =>{\r\n                    if (us.login === action.activeLogin){\r\n                        us.saveInquiries.push({\r\n                            id: action.id,\r\n                            query: action.query,\r\n                            title: action.title,\r\n                            sort: action.sort,\r\n                            numRes: action.numRes\r\n                        })\r\n                    }\r\n                    return us\r\n                })\r\n            \r\n            case EDIT_FAVORITES:\r\n                return [...state].map(us =>{\r\n                    if (us.login === action.activeLogin){\r\n                        us.saveInquiries = us.saveInquiries.map(qu => \r\n                            qu.id === action.id ?\r\n                            {...qu, \r\n                                query: action.query,\r\n                                title: action.title,\r\n                                sort: action.sort,\r\n                                numRes: action.numRes\r\n                            }:qu)\r\n                    }\r\n                    return us\r\n                })\r\n\r\n            case REMOVE_FAVORITES:\r\n                return [...state].map(us =>{\r\n                    if (us.login === action.activeLogin){\r\n                        us.saveInquiries = us.saveInquiries.filter(quest => quest.id !== action.id)\r\n                    }\r\n                    return us\r\n                })\r\n        default: return state\r\n    }\r\n}","import { ENTRY } from '../actions/SessionActions';\r\nimport { load } from 'redux-localstorage-simple';\r\n\r\nlet ENTR = load({ namespace: 'search_youtube' });\r\n\r\nif (!ENTR || !('entry' in ENTR) ){\r\n    ENTR = {\r\n        entry: false,\r\n    }\r\n}\r\n\r\nexport const entry = ( state=ENTR.entry, action ) =>{\r\n    switch(action.type){\r\n        case ENTRY:\r\n            return !state\r\n        default: return state\r\n    }\r\n}\r\n","import { ACTIVE_LOGIN } from '../actions/SessionActions';\r\nimport { load } from 'redux-localstorage-simple';\r\n\r\nlet ACTIVE = load({ namespace: 'search_youtube' })\r\n\r\nif ( !ACTIVE || !('activeLogin' in ACTIVE) ){\r\n    ACTIVE = {\r\n        activeLogin: ''\r\n    }\r\n}\r\n\r\nexport const activeLogin = (state = ACTIVE.activeLogin, action) =>{\r\n    switch(action.type){\r\n        case ACTIVE_LOGIN: \r\n            return action.login\r\n        default: return state\r\n    }\r\n}","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { rootReducer } from '../reducers/index';\r\nimport { save } from 'redux-localstorage-simple';\r\n\r\n\r\n\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV !== 'production' &&\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n\r\n\r\nconst configureStore = preloadedState => (\r\n  createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    composeEnhancers(\r\n        applyMiddleware(save({ \r\n          namespace: 'search_youtube',\r\n         }))\r\n    ),\r\n  )\r\n);\r\n\r\nconst store = configureStore({});\r\n\r\nexport default store;","import { combineReducers } from 'redux'\r\nimport { users } from './users'\r\nimport { entry } from './entry'\r\nimport { activeLogin } from './activeLogin'\r\nimport { query, isSearch, result, sort} from './query'\r\n\r\nexport const rootReducer = combineReducers({\r\n    users,\r\n    entry,\r\n    activeLogin,\r\n    query,\r\n    isSearch,\r\n    result,\r\n    sort\r\n})","import { ACTIVE_QUERY, ACTIVE_SEARCH, ACTIVE_RESULT, ACTIVE_SORT, DISABLED_SEARCH } from '../actions/QueryActions'\r\n\r\nconst initialQuery = ''\r\nconst initialIsSearch = false\r\nconst initialResult = 12\r\nconst initialSort = 'noSort'\r\n\r\nexport const query = (state = initialQuery, action) =>{\r\n    switch (action.type){\r\n        case ACTIVE_QUERY:\r\n            return action.value\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const isSearch = (state = initialIsSearch, action) =>{\r\n    switch (action.type){\r\n        case ACTIVE_SEARCH:\r\n            return true\r\n        case DISABLED_SEARCH:\r\n            return false\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const result = (state = initialResult, action) =>{\r\n    switch (action.type){\r\n        case ACTIVE_RESULT:\r\n            return action.numResult\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const sort = (state = initialSort, action) =>{\r\n    switch (action.type){\r\n        case ACTIVE_SORT:\r\n            return action.sort\r\n        default: return state\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Icon } from 'antd'\r\nimport 'antd/dist/antd.css'\r\nimport { Link } from 'react-router-dom'\r\nimport './FavoriteItem.scss'\r\n\r\n\r\nconst FavoriteItem = ({ \r\n    id, title, modalActData, activeLogin, removeFavorites, queryFavorit\r\n}) =>{\r\n    return(\r\n        <div key={id} className='favorite__inner'>\r\n            <Link to='/search-youtube'><div className='favorite__title' onClick={() => queryFavorit(id)}><p>{title}</p></div></Link>\r\n            <div>\r\n                <Icon className='favorite__icon favorite__icon_edit' onClick={() => modalActData(id)} type=\"highlight\" />\r\n                <Icon className='favorite__icon favorite__icon_delete' type=\"delete\" onClick={() => removeFavorites(id, activeLogin)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nFavoriteItem.propTypes ={\r\n    removeFavorites: PropTypes.func.isRequired,\r\n    modalActData: PropTypes.func.isRequired,\r\n    queryFavorit: PropTypes.func.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    activeLogin: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n\r\n}\r\n\r\nFavoriteItem.defaultProps ={\r\n    removeFavorites: () => {},\r\n    modalActData: () => {},\r\n    queryFavorit: () => {},\r\n    id: 0,\r\n    activeLogin: '',\r\n    title: '',\r\n}\r\n\r\nexport default FavoriteItem","import  { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Portal extends Component {\r\n\r\n  el = document.createElement('div');\r\n\r\n  componentDidMount() {\r\n    document.body.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return ReactDOM.createPortal(children, this.el);\r\n  }\r\n}\r\n\r\nexport default Portal;\r\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Input } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddFavoriteQuery = ({ query, activeQuery }) => {\r\n    return(\r\n        <div>\r\n            Запрос\r\n            <Input onChange={(e) => activeQuery(e.target.value)}\r\n            placeholder='Введите запрос'\r\n            defaultValue={query}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nAddFavoriteQuery.propTypes = {\r\n    query: PropTypes.string,\r\n    activeQuery: PropTypes.func\r\n}\r\n\r\nAddFavoriteQuery.defaultProps = {\r\n    query: '',\r\n    activeQuery: () => {}\r\n}\r\n\r\nexport default AddFavoriteQuery","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Input } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddFavoriteTitle = ({ initTitle, titleFavorite }) => {\r\n    return(\r\n        <div className='modalOverlay__title'>\r\n            Название\r\n            <Input onChange={titleFavorite}\r\n            placeholder='Введите запрос'\r\n            defaultValue={initTitle}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nAddFavoriteTitle.propTypes = {\r\n    initTitle: PropTypes.string,\r\n    titleFavorite: PropTypes.func\r\n}\r\n\r\nAddFavoriteTitle.defaultProps = {\r\n    initTitle: '',\r\n    titleFavorite: () => {}\r\n}\r\n\r\nexport default AddFavoriteTitle","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Select } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst { Option } = Select;\r\n\r\nconst AddFavoriteSlider = ({ selectSort, initialSort }) => {\r\n    return(\r\n        <div className='modalOverlay__sort'>\r\n            Сортировка\r\n            <Select className='modalOverlay__sort-input' onChange={selectSort} defaultValue={initialSort}>\r\n                <Option value=\"noSort\">Без сортировки</Option>\r\n                <Option value=\"date\">По дате</Option>\r\n                <Option value=\"rating\">По рейтингу</Option>\r\n                <Option value=\"relevance\">По релевантности</Option>\r\n                <Option value=\"title\">По алфавиту</Option>\r\n                <Option value=\"videoCount\">В порядке убывания загруженных видео</Option>\r\n                <Option value=\"viewCount\">По просмотрам</Option>\r\n            </Select>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddFavoriteSlider.propTypes = {\r\n    initialSort: PropTypes.string,\r\n    selectSort: PropTypes.func\r\n}\r\n\r\nAddFavoriteSlider.defaultProps = {\r\n    initialSort: 'noSort',\r\n    selectSort: () => {}\r\n}\r\n\r\nexport default AddFavoriteSlider","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Slider } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst AddFavoriteSlider = ({ numResults, maxResults }) => {\r\n    return(\r\n        <div className='modalOverlay__sort'>\r\n            Выводимое количество видео\r\n            <Slider className='modalOverlay__result' onChange={numResults} defaultValue={maxResults} max={50} tooltipVisible/>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddFavoriteSlider.propTypes = {\r\n    maxResults: PropTypes.number,\r\n    numResults: PropTypes.func\r\n}\r\n\r\nAddFavoriteSlider.defaultProps = {\r\n    maxResults: 12,\r\n    numResults: () => {}\r\n}\r\n\r\nexport default AddFavoriteSlider","import React from 'react'\r\nimport 'antd/dist/antd.css';\r\nimport { Button } from 'antd';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddFavoriteButton = ({ save, modalAct, favoritesAdd, editFavorites }) =>{\r\n    return(\r\n        <div className='modalOverlay__button-group'>\r\n            <Button onClick={modalAct} htmlType=\"submit\" className=\"login-form-button\">\r\n                {save ? <span>Не сохранять</span> : <span>Не изменять</span>}\r\n            </Button>\r\n            {save ? \r\n                <Button onClick={favoritesAdd} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                    <span>Сохранить</span>\r\n                </Button>\r\n                :\r\n                <Button onClick={editFavorites} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                    <span>Изменить</span>\r\n                </Button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nAddFavoriteButton.propTypes ={\r\n    save: PropTypes.bool,\r\n    modalAct: PropTypes.func,\r\n    favoritesAdd: PropTypes.func,\r\n    editFavorites: PropTypes.func\r\n}\r\n\r\nAddFavoriteButton.defaultProps = {\r\n    save: false,\r\n    modalAct: () => {},\r\n    favoritesAdd: () => {},\r\n    editFavorites: () => {},\r\n\r\n}\r\n\r\nexport default AddFavoriteButton","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Icon } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport Portal from '../Portal/Portal'\r\nimport './AddFavorite.scss'\r\nimport AddFavoriteQuery from '../AddFavoriteQuery/AddFavoriteQuery'\r\nimport AddFavoriteTitle from '../AddFavoriteTitle/AddFavoriteTitle'\r\nimport AddFavoriteSort from '../AddFavoriteSort/AddFavoriteSort'\r\nimport AddFavoriteSlider from '../AddFavoriteSlider/AddFavoriteSlider'\r\nimport AddFavoriteButton from '../AddFavoriteButton/AddFavoriteButton'\r\n\r\n\r\nconst AddFavorite = ({ maxResults, activeQuery, initialSort, selectSort, numResults, titleFavorite, favoritesAdd, editFavorites, isOpen, modalAct, query, save, initTitle }) => {\r\n    return (\r\n        <>\r\n        { isOpen &&\r\n            <Portal>\r\n                <div className=\"modalOverlay\">\r\n                    <div className=\"modalOverlay__window\">\r\n                        <Icon className=\"modalOverlay__icon-close\" onClick={modalAct} type=\"close\" />\r\n                        {save ? \r\n                        <h1 className=\"modalOverlay__header\">Сохранить запрос</h1>:\r\n                        <h1 className=\"modalOverlay__header\">Изменить запрос</h1>\r\n                        }\r\n                        <AddFavoriteQuery query={query} activeQuery={activeQuery} />\r\n                        <AddFavoriteTitle initTitle={initTitle} titleFavorite={titleFavorite} />\r\n                        <AddFavoriteSort selectSort={selectSort} initialSort={initialSort} />\r\n                        <AddFavoriteSlider maxResults={maxResults} numResults={numResults} />\r\n                        <AddFavoriteButton save={save} modalAct={modalAct} editFavorites={editFavorites} favoritesAdd={favoritesAdd} />\r\n                        \r\n                    </div>\r\n                </div>\r\n            </Portal>\r\n        }\r\n    </>\r\n    )\r\n}\r\n\r\nAddFavorite.propTypes = {\r\n    isOpen: PropTypes.bool,\r\n    modalAct: PropTypes.func,\r\n    query: PropTypes.string,\r\n    save: PropTypes.bool,\r\n    selectSort: PropTypes.func,\r\n    numResults: PropTypes.func,\r\n    titleFavorite: PropTypes.func,\r\n    favoritesAdd: PropTypes.func,\r\n    maxResults: PropTypes.number,\r\n    activeQuery: PropTypes.func,\r\n    initTitle: PropTypes.string,\r\n    initialSort: PropTypes.string,\r\n}\r\n\r\nAddFavorite.defaultProps = {\r\n    isOpen: false,\r\n    modalAct: () => {},\r\n    query: '',\r\n    save: false,\r\n    initTitle: '',\r\n    initialSort: 'noSort',\r\n    selectSort: () => {},\r\n    numResults: () => {},\r\n    titleFavorite: () => {},\r\n    favoritesAdd: () => {},\r\n    activeQuery: () => {},\r\n    maxResults: 12,\r\n}\r\n\r\nexport default AddFavorite\r\n","import React, { Fragment, Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport FavoriteItem from '../../components/FavoriteItem/FavoriteItem'\r\nimport { activeQuery, activeResult, activeSort, activeSearch } from '../../actions/QueryActions'\r\nimport { editFavorites, removeFavorites } from '../../actions/FavoritesQuery'\r\nimport AddFavorite from '../../components/AddFavorite/AddFavorite'\r\nimport './FavotitesList.scss'\r\n\r\nclass FavoritesList extends Component {\r\n\r\n  state ={\r\n    modalWindow: false,\r\n    save: false,\r\n    title: '',\r\n    stateId: 0,\r\n    num: 12,\r\n    actQuery: '',\r\n    actSort: 'noSort'\r\n  }\r\n\r\n  dataFavorite = () =>{\r\n    let save = []\r\n    const { users, activeLogin } = this.props\r\n    users.map(us =>{\r\n      if (us.login === activeLogin){\r\n        save = us.saveInquiries\r\n      }\r\n      return us\r\n    })\r\n    return save\r\n  }\r\n\r\n  titleFavorite = ({target: {value}}) => {\r\n    this.setState ({\r\n      title: value\r\n    })\r\n  }\r\n\r\n  //Modal Window\r\n\r\n  modalAct = () =>{\r\n    this.setState(prevState => ({\r\n      modalWindow: !prevState.modalWindow\r\n    }));\r\n  }\r\n\r\n  activeClear = () =>{\r\n    const { activeQuery, activeResult, activeSort } = this.props\r\n    this.modalAct()\r\n    activeQuery('')\r\n    activeResult(12)\r\n    activeSort('noSort')\r\n  }\r\n\r\n  queryFavorit = (elemId) =>{\r\n    const dataFavorite = this.dataFavorite()\r\n    const { activeQuery, activeResult, activeSort, activeSearch } = this.props\r\n    dataFavorite.map(data =>{\r\n      if(data.id===elemId){\r\n        activeQuery(data.query)\r\n        activeResult(data.numRes)\r\n        activeSort(data.sort)\r\n        activeSearch()\r\n      }\r\n      return data\r\n    })\r\n  }\r\n\r\n  modalActData = (elemId) =>{\r\n    const dataFavorite = this.dataFavorite()\r\n    const { activeQuery, activeResult, activeSort } = this.props\r\n    dataFavorite.map(data =>{\r\n      if(data.id===elemId){\r\n        activeQuery(data.query)\r\n        activeResult(data.numRes)\r\n        activeSort(data.sort)\r\n        this.modalAct()\r\n        this.setState({\r\n          title: data.title,\r\n          stateId: data.id, \r\n          num: data.numRes,\r\n          actQuery: data.query,\r\n          actSort: data.sort\r\n        })\r\n      }\r\n      return data\r\n    })\r\n  }\r\n\r\n  edFavorites = () =>{\r\n    const { stateId, title } = this.state\r\n    const { editFavorites, activeLogin, query, sort, result } = this.props\r\n    editFavorites(stateId, query, title, sort, result, activeLogin)\r\n    this.activeClear()\r\n  }\r\n  //  /Modal Window\r\n\r\n\r\n  render(){\r\n    const { save, modalWindow, title, num, actQuery, actSort } = this.state\r\n    const { activeLogin, activeQuery, activeResult, activeSort, removeFavorites } = this.props\r\n    const favoriteByUser = this.dataFavorite()\r\n    return(\r\n      <Fragment>\r\n        <div className='favorite'>\r\n          <div className='favorite__container'>\r\n            <h1 className='favorite__header'>Избранное</h1>\r\n              <div className='favorite__background'>\r\n              <AddFavorite activeQuery={activeQuery} initialSort={actSort} selectSort={activeSort} numResults={activeResult} initTitle={title} maxResults={num} titleFavorite={this.titleFavorite} editFavorites={this.edFavorites} save={save} query={actQuery} isOpen={modalWindow} modalAct={this.activeClear} />\r\n              {favoriteByUser.length ? \r\n                favoriteByUser.map(data =>(\r\n                <div key={data.id} className='favorite__list'>\r\n                  <FavoriteItem id={data.id}  title={data.title} modalActData={this.modalActData}\r\n                  activeLogin={activeLogin} removeFavorites={removeFavorites} queryFavorit={this.queryFavorit}\r\n                  />\r\n                </div>\r\n                ))\r\n                :\r\n                <span>Нет сохраненных видео</span>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect (state => \r\n  ({\r\n    activeLogin: state.activeLogin,\r\n    users: state.users,\r\n    query: state.query,\r\n    sort: state.sort,\r\n    result: state.result,\r\n  }), { activeQuery, activeResult, activeSort, editFavorites, removeFavorites, activeSearch })(FavoritesList)\r\n","import React from 'react'\r\nimport 'antd/dist/antd.css'\r\nimport { Input } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport { Icon } from 'antd'\r\n\r\nconst RequestItem = ({ className, onChange, onSearch, value, modalAct }) =>{\r\n    const { Search } = Input;\r\n    return(\r\n        <Search className={className}\r\n        placeholder=\"Что хотите посмотреть?\"\r\n        enterButton=\"Найти\"\r\n        size=\"large\"\r\n        onChange={(e) => onChange(e.target.value)}\r\n        onSearch={onSearch}\r\n        value={value}\r\n        suffix={<Icon onClick={modalAct} type=\"heart\" theme=\"twoTone\" twoToneColor=\"#1390E5\" />}\r\n        />\r\n    )\r\n}\r\n\r\nRequestItem.propTypes = {\r\n    onChange: PropTypes.func,\r\n    onSearch: PropTypes.func,\r\n    modalAct: PropTypes.func,\r\n    value: PropTypes.string,\r\n  }\r\n  \r\nRequestItem.defaultProps = {\r\n    onChange: () => {},\r\n    onSearch: () => {},\r\n    modalAct: () => {},\r\n    value: ''\r\n}\r\n\r\nexport default RequestItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './VideoItem.scss'\r\n\r\nconst VIDEO_PATH = 'https://www.youtube.com/watch?v=';\r\n\r\nconst VideoItem = ({ videoId, title, channelTitle, url, list }) =>{ \r\n    return (\r\n        <div key={videoId} className={`card card${list}`}>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={VIDEO_PATH + videoId} >\r\n                <div className={`card__inner card__inner${list}`}>\r\n                    <div className={`card__content-img${list}`}>\r\n                        <img className={`card__img card__img${list}`} src={url} alt=\"\" />\r\n                    </div>\r\n                    <div className={`card__content-text card__content-text${list}`}>\r\n                        <h1 className={`card__title card__title${list}`}>{title}</h1>\r\n                        <h2 className={`card__chanel card__chanel${list}`}>{channelTitle}</h2>\r\n                    </div>\r\n                </div>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoItem;\r\n\r\nVideoItem.propTypes = {\r\n    videoId: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    channelTitle: PropTypes.string.isRequired,\r\n    list: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n  }\r\n  \r\n  VideoItem.defaultProps = {\r\n    videoId: '',\r\n    title: '',\r\n    channelTitle: '',\r\n    list: '',\r\n    url: ''\r\n  }","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport VideoItem from '../VideoItem/VideoItem'\r\nimport { Icon } from 'antd'\r\nimport './VideoList.scss'\r\n\r\nconst VideoList = ({ list, result, value, isSearch, selectGrid, selectList, actList }) =>{ \r\n    return (\r\n        <Fragment>\r\n            <div className='search__sort-header'>\r\n                <div className='search__header'>\r\n                    {isSearch && <h1 className='search__header-text'>Видео по запросу «{value}»</h1>}\r\n                </div>\r\n                <div className='search__sort'>\r\n                    {isSearch && <Icon className={`search__icon search_ico${actList}`} onClick={selectList} type=\"unordered-list\" />}\r\n                    {isSearch && <Icon className={`search__icon search_icon${actList}`} onClick={selectGrid} type=\"border-inner\" />}\r\n                </div>\r\n            </div>\r\n            <div className={`search__result-container search__result-container${list}`}>\r\n                {result.map(({ id:{ videoId }, snippet: { channelTitle, title }, snippet: { thumbnails: { default: { url } } } }) =>(\r\n                    <VideoItem list={list} key={ videoId } videoId={ videoId } title={ title } channelTitle={ channelTitle } url={ url } />\r\n                ))}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default VideoList;\r\n\r\nVideoList.propTypes = {\r\n    result: PropTypes.array.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    stateList: PropTypes.string.isRequired,\r\n    list: PropTypes.string.isRequired,\r\n    isSearch: PropTypes.bool.isRequired,\r\n    selectGrid: PropTypes.func,\r\n    selectList: PropTypes.func\r\n  }\r\n  \r\n  VideoList.defaultProps = {\r\n    result: [],\r\n    value: '',\r\n    stateList: '',\r\n    list: '_list',\r\n    isSearch: false,\r\n    selectGrid: ()=>{},\r\n    selectList: ()=>{}\r\n  }","import React from 'react'\r\nimport preloader from './loader.svg'\r\n\r\nconst Preloader = () =>{\r\n    return <div className='search__preloader'> <img src={preloader} alt='' /> </div>\r\n}\r\n\r\nexport default Preloader\r\n","import React, { Fragment, Component } from 'react'\r\nimport RequestItem from '../../components/RequestItem/RequestItem'\r\nimport axios from 'axios'\r\nimport './Search.scss'\r\nimport VideoList from '../../components/VideoList/VideoList'\r\nimport { connect } from 'react-redux'\r\nimport { activeQuery, activeSearch, activeResult, activeSort } from '../../actions/QueryActions'\r\nimport AddFavorite from '../../components/AddFavorite/AddFavorite'\r\nimport { addFavorites, editFavorites, removeFavorites } from '../../actions/FavoritesQuery'\r\nimport { message } from 'antd'\r\nimport Preloader from '../../components/Preloader/Preloader'\r\n\r\nconst BASE_PATH = 'https://www.googleapis.com/youtube/v3'\r\nconst SEARCH_PATH = '/search?part=snippet&q='\r\nconst KEY_PATH = '&type=video&key='\r\nconst KEY = 'AIzaSyAhtDMDRo6MVoESyjzHW9bwExpvlZ-u7VA'\r\nconst RESULT = '&maxResults='\r\nconst BASE_SORT = '&sort='\r\n\r\nclass Search extends Component {\r\n\r\n  state = {\r\n    result: [],\r\n    modalWindow: false,\r\n    stateList: 'list',\r\n    completedQuery: '',\r\n    sort: '',\r\n    save: true,\r\n    title: '',\r\n    isLoading: false\r\n  }\r\n\r\n  componentDidMount(){\r\n    const { query, isSearch } = this.props\r\n    if ( query.length && isSearch ){\r\n      this.onSearch()\r\n    }\r\n  }\r\n\r\n    // Fetch Data\r\n  fetchData = (query, result, sort) => {\r\n    this.setState({isLoading: true})\r\n    axios.get(`${BASE_PATH}${SEARCH_PATH}${query}${KEY_PATH}${KEY}${RESULT}${result}${BASE_SORT}${sort}`)\r\n    .then(result => {\r\n      this.setVideo(result)\r\n      this.setState({isLoading: false})\r\n    })\r\n    .catch(error => error)\r\n  }\r\n\r\n  setVideo = (result) => {\r\n    this.setState({\r\n      result: result.data.items\r\n    })\r\n  }\r\n\r\n  onSearch = () =>{\r\n    const { query, activeSearch, result, sort } = this.props\r\n    this.fetchData(query, result, sort)\r\n    this.setState({\r\n      completedQuery: query,\r\n    })\r\n    activeSearch()\r\n\r\n  }//   /Fetch Data\r\n    \r\n    // State VideoList\r\n  selectList = () =>{\r\n    this.setState({\r\n      stateList: 'list'\r\n    })\r\n  }\r\n\r\n  selectGrid = () =>{\r\n    this.setState({\r\n      stateList: 'grid'\r\n    })\r\n  }// /State VideoList\r\n\r\n  //Modal Window\r\n\r\n  modalAct = () =>{\r\n    this.setState(prevState => ({\r\n      modalWindow: !prevState.modalWindow\r\n    }));\r\n  }\r\n\r\n  selectSort = (value) =>{\r\n    this.setState ({\r\n      sort: value\r\n    })\r\n  }\r\n\r\n  titleFavorite = ({target: {value}}) => {\r\n    this.setState ({\r\n      title: value\r\n    })\r\n  }\r\n\r\n  favoritesAdd = () =>{\r\n    const { sort, query, activeLogin, addFavorites, result, activeResult, activeSort } = this.props\r\n    const { title } = this.state\r\n    addFavorites((new Date()).getTime(), query, title, sort, result, activeLogin )\r\n    this.modalAct()\r\n    activeResult(12)\r\n    activeSort('noSort')\r\n    this.message()\r\n  }\r\n\r\n  message = () =>{\r\n    message.info(`Поиск сохранен в разделе «Избранное»`)\r\n  }\r\n\r\n\r\n  render (){\r\n    const { result, stateList, completedQuery, modalWindow, save, isLoading } = this.state\r\n    const { isSearch, activeSort, activeResult, query, activeQuery } = this.props\r\n    const act = isSearch ? '_active' : '_disable'\r\n    const list = stateList === 'list' ? '_list' : '_grid'\r\n    const actList = stateList === 'list' ? '_list_active' : '_grid_active'\r\n    return(\r\n        <Fragment>\r\n          <div className={`search search${act}`}>\r\n            <div className={`search__input${act}`}>\r\n              <h1 className={`search__header-title${act}`}>Поиск видео</h1>\r\n              <AddFavorite activeQuery={activeQuery} selectSort={activeSort} numResults={activeResult} titleFavorite={this.titleFavorite} favoritesAdd={this.favoritesAdd} save={save} query={query} isOpen={modalWindow} modalAct={this.modalAct} />\r\n              <RequestItem className={isSearch ? 'search_active' : 'search_disabled' } modalAct={this.modalAct} value={query} onChange={activeQuery} onSearch={this.onSearch} /> \r\n            </div>\r\n            {isLoading ? \r\n              <Preloader />: \r\n              result.length ? \r\n              <VideoList list={list} actList={actList} isSearch={isSearch} result={result} value={completedQuery} selectGrid={this.selectGrid} selectList={this.selectList} />\r\n              :\r\n              isSearch && \r\n                <div className='search__error'>\r\n                  <h1 className='search__error-text'>Видео по запросу не найдено</h1>\r\n                </div>\r\n            }\r\n          </div>\r\n        </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect (state => \r\n  ({\r\n    activeLogin: state.activeLogin,\r\n    users: state.users,\r\n    query: state.query,\r\n    isSearch: state.isSearch,\r\n    result: state.result,\r\n    sort: state.sort\r\n  }), { activeSort, activeResult, activeQuery, activeSearch, addFavorites, editFavorites, removeFavorites })(Search)\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport FavoritesList from './containers/FavotitesList/FavotitesList';\nimport Search from './containers/Search/Search';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App>\n                <Switch>\n                    <Route exact path='/search-youtube' component={Search} />\n                    <Route path='/favorites-youtube' component={FavoritesList} />\n                </Switch>\n            </App>\n        </BrowserRouter>\n    </Provider>\n, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}